#!/bin/bash

function is_ml_service_running() {
    if [ -f $OPENSHIFT_ML_DIR/ml.pid ]; then
        ml_pid=$( cat $OPENSHIFT_ML_DIR/ml.pid 2> /dev/null )
        if `ps --pid $ml_pid 2>&1`; then
            return 0
        fi
    fi

    return 1
}

function status() {
    if [ is_ml_service_running ]; then
        client_result "Application is running"
    else
        client_result "Application is not running"
    fi
}


function start() {
    pushd "$OPENSHIFT_REPO_DIR"
    {
        nohup "ml" &

        ret=$?
        npid=$!
        if [ $ret -eq 0 ]; then
            echo "$npid" > "$OPENSHIFT_ML_DIR/ml.pid"
        else
            exit $ret
        fi
    }
}

function stop() {
    if [ -f $OPENSHIFT_ML_DIR/ml.pid ]; then
        ml_pid=$( cat $OPENSHIFT_ML_DIR/ml.pid 2> /dev/null )
    fi

    if [ -n "$ml_pid" ]; then
      
        /bin/kill $ml_pid
        ret=$?

        rm -f $OPENSHIFT_ML_DIR/ml.pid
    fi
}

function restart() {
    stop
    start
}

function build() {
    echo
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
    echo
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -eq 1 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status]"
    exit 1
fi

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    *) exit 0;
esac

